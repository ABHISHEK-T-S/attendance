/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Attendence;

import Database.DatabaseConnection;
import datepicker.DatePicker;
import java.awt.HeadlessException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Observable;
import java.util.Observer;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.general.DefaultPieDataset;
import sendemail.SimpleSendEmail;

/**
 *
 */
public class AttendenceCheck extends javax.swing.JFrame implements Observer {

    DatabaseConnection dbcon = new DatabaseConnection();
    String Subject = "Student Information From K. J. Somaiya Institute of Engineering and Information Technology";
    String dateText = "";
    public static String data1, data2, data3, data4;

    /**
     * Creates new form AttendenceCheck
     */
    public AttendenceCheck() {
        try {
            initComponents();
            setLocationRelativeTo(null);
            dbcon = new DatabaseConnection();
            dbcon.dbconnection();
            setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        } catch (Exception ex) {
            Logger.getLogger(AttendenceCheck.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtStudentId = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblStudentDetails = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtStudentIdPiChart = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtPiStartDate = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtPiEndDate = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        draw = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        cmbSubjectChart = new javax.swing.JComboBox();
        pnlDraw = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        lblPercent = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        cmbSubject = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        txtFromDate = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtToDate = new javax.swing.JTextField();
        btnFrmDate = new javax.swing.JButton();
        btnToDate = new javax.swing.JButton();
        dfautlst = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDefltList = new javax.swing.JTable();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        cmbDay = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        cmbSub = new javax.swing.JComboBox();
        addtime = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        txtToTime = new javax.swing.JTextField();
        txtFromTime = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblResults = new javax.swing.JTable();
        showtime = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        jTabbedPane1.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        jLabel1.setText("SELECT DATE");

        txtDate.setEditable(false);
        txtDate.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N

        jButton1.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/calendar.gif"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnSearch.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        btnSearch.setText("SEARCH");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        jLabel2.setText("ENTER STUDENT ID");

        txtStudentId.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N

        jButton2.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        jButton2.setText("SEARCH");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(122, 122, 122)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtStudentId)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnSearch)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtStudentId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1))
                    .addComponent(btnSearch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(34, 34, 34))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tblStudentDetails.setFont(new java.awt.Font("Lucida Bright", 0, 14)); // NOI18N
        tblStudentDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblStudentDetails);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 687, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Attendence", jPanel3);

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        jLabel3.setText("ENTER STUDENT ID");

        txtStudentIdPiChart.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        jLabel4.setText("SELECT START DATE");

        txtPiStartDate.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        jLabel5.setText("SELECT END DATE");

        txtPiEndDate.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N

        jButton3.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/calendar.gif"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/calendar.gif"))); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        draw.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        draw.setText("DRAW");
        draw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drawActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        jLabel10.setText("SELECT SUBJECT");

        cmbSubjectChart.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        cmbSubjectChart.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "HMI", "DWM", "PDS", "DF" }));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addComponent(draw))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtPiEndDate)
                            .addComponent(txtPiStartDate)
                            .addComponent(txtStudentIdPiChart)
                            .addComponent(cmbSubjectChart, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(144, 144, 144))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(txtStudentIdPiChart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPiStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPiEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel3)))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(cmbSubjectChart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(draw, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        pnlDraw.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnlDraw.setLayout(new java.awt.BorderLayout());

        jLabel11.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        jLabel11.setText("PERCENT:");

        lblPercent.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblPercent.setForeground(new java.awt.Color(0, 0, 255));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlDraw, javax.swing.GroupLayout.DEFAULT_SIZE, 709, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(273, 273, 273)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblPercent, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnlDraw, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11)
                    .addComponent(lblPercent, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("AttendenceChart", jPanel4);

        jPanel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel6.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        jLabel6.setText("SELECT SUBJECT");

        cmbSubject.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        cmbSubject.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "HMI", "DWM", "PDS", "DF" }));

        jLabel8.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        jLabel8.setText("FROM DATE");

        txtFromDate.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        jLabel9.setText("TO DATE");

        txtToDate.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N

        btnFrmDate.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        btnFrmDate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/calendar.gif"))); // NOI18N
        btnFrmDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFrmDateActionPerformed(evt);
            }
        });

        btnToDate.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        btnToDate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/calendar.gif"))); // NOI18N
        btnToDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnToDateActionPerformed(evt);
            }
        });

        dfautlst.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        dfautlst.setText("LIST");
        dfautlst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dfautlstActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cmbSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtFromDate, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnFrmDate, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(84, 84, 84)
                                .addComponent(jLabel9)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtToDate, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnToDate, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(310, 310, 310)
                        .addComponent(dfautlst, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnFrmDate, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(txtFromDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(txtToDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnToDate, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbSubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addComponent(dfautlst, javax.swing.GroupLayout.PREFERRED_SIZE, 32, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tblDefltList.setFont(new java.awt.Font("Lucida Bright", 0, 14)); // NOI18N
        tblDefltList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblDefltList);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("DefaulterList", jPanel7);

        jTabbedPane2.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        jTabbedPane2.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N

        jPanel10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel12.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        jLabel12.setText("SELECT DAY");

        cmbDay.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        cmbDay.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" }));

        jLabel13.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        jLabel13.setText("SELECT SUBJECT");

        cmbSub.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        cmbSub.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "DES. PROJ.", "DWM", "PDS", "DF" }));
        cmbSub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSubActionPerformed(evt);
            }
        });

        addtime.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        addtime.setText("ADD ENTRY");
        addtime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addtimeActionPerformed(evt);
            }
        });

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "  Time should be in 24 Hours (00.00) Format  ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Bright", 3, 12), new java.awt.Color(255, 0, 0))); // NOI18N

        txtToTime.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        txtToTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtToTimeActionPerformed(evt);
            }
        });
        txtToTime.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtToTimeKeyReleased(evt);
            }
        });

        txtFromTime.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        txtFromTime.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFromTimeKeyReleased(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        jLabel15.setText("TO TIME");

        jLabel14.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        jLabel14.setText("FROM TIME");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtFromTime, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                    .addComponent(txtToTime))
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtFromTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txtToTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap(121, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbSub, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbDay, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                            .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(113, 113, 113))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                            .addComponent(addtime, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(182, 182, 182)))))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap(86, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(cmbSub, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addComponent(addtime, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );

        jTabbedPane2.addTab("Time Table Entry", jPanel6);

        tblResults.setFont(new java.awt.Font("Lucida Bright", 0, 14)); // NOI18N
        tblResults.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblResults.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblResultsMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblResults);

        showtime.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        showtime.setText("SHOW");
        showtime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showtimeActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        jButton5.setText("DELETE ENTRY");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 566, Short.MAX_VALUE)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(showtime, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(95, 95, 95)
                        .addComponent(jButton5)))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(showtime, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(3, 3, 3)))
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 515, Short.MAX_VALUE)
                .addGap(19, 19, 19))
        );

        jTabbedPane2.addTab("show timetable", jPanel11);

        jTabbedPane1.addTab("TimeTable", jTabbedPane2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 591, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dfautlstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dfautlstActionPerformed
        // TODO add your handling code here:
        try {
            String fromDate = txtFromDate.getText();
            String toDate = txtToDate.getText();
            String subject = cmbSubject.getSelectedItem().toString();

            if (fromDate.equals("")) {
                error("ENTER PROPER DATE !");
                txtFromDate.grabFocus();
                return;
            }

            if (toDate.equals("")) {
                error("ENTER PROPER DATE !");
                txtToDate.grabFocus();
                return;
            }

            int TotalNumOfDays = getNumOfPresentDays(subject, fromDate, toDate);
            if (TotalNumOfDays == 0) {
                error("No Data Found  FOR This subject On this dates!!!");
                return;
            }

            System.out.println("" + TotalNumOfDays);

            //Now Find Total Number present on that date
            Vector row = new Vector();
            String query = " SELECT * FROM Student";
            ResultSet rs = dbcon.getResultSet(query);
            double percent = 0;
            while (rs.next()) {
                Vector t = new Vector();
                String sid = rs.getString(1);
                String sname = rs.getString(2);
                t.add(sid);
                t.add(sname);

                String q = "SELECT COUNT(*) FROM ATTENDENCE WHERE SUBJECT='" + subject + "' AND (attDate<='" + toDate + "' AND attDate>='" + fromDate + "') AND present='p' and SID='" + sid + "'";
                System.out.println("" + q);

                ResultSet rs1 = dbcon.getResultSet(q);
                int stcnt = 0;
                if (rs1.next()) {
                    stcnt = Integer.parseInt(rs1.getString(1));
                }

                System.out.println("stcnt: " + stcnt);
                System.out.println("Total Days: " + TotalNumOfDays);
                DecimalFormat df = new DecimalFormat("##.##");
                percent = ((double) (stcnt) / TotalNumOfDays) * 100;
                if (percent >= 100.0) {
                    t.add(df.format(100.0) + "%");
                    row.add(t);
                } else if (percent < 75.0) {
                    sendMessage(sid, subject, percent + "");
                    sendemailMessage(sid, subject, percent + "");
                    t.add(df.format(percent) + "%");
                    row.add(t);
                } else {
                    t.add(df.format(percent) + "%");
                    row.add(t);
                }
            }
            addTable(row);
            System.out.println("" + row);
        } catch (SQLException | NumberFormatException | HeadlessException e) {
        }
    }//GEN-LAST:event_dfautlstActionPerformed

    public void sendMessage(String sid, String subject, String percent) {
            try {
                String q = "SELECT phoneno FROM student WHERE sid='" + sid + "'";
                ResultSet rs = dbcon.getResultSet(q);
                if (rs.next()) {
                    String phnNo = rs.getString(1);
                    String message = " Your Student Attendence is very Irregular For College Lectures, Please visit college for discussion.";
                    System.out.println("phnNo: " + phnNo);
                    System.out.println("messge: " + message);
                    SendSms.SendSms.Way2SMS(phnNo, message);
                }
            } catch (SQLException ex) {
                Logger.getLogger(AttendenceCheck.class.getName()).log(Level.SEVERE, null, ex);
            }
    }

    public void sendemailMessage(String sid, String subject, String percent) {
            try {
                String q = "SELECT email FROM student WHERE sid='" + sid + "'";
                ResultSet rs = dbcon.getResultSet(q);
                if (rs.next()) {
                    String email_id = rs.getString(1);
                    String message = " Your Student Attendence is very Irregular For College Lectures, Please visit college for discussion.";
                    new SimpleSendEmail(email_id, Subject, message);
                }
            } catch (SQLException ex) {
                Logger.getLogger(AttendenceCheck.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    private void btnToDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToDateActionPerformed
        // TODO add your handling code here:
        try {
            DatePicker dp = new DatePicker(this, new Date());
            dp.start(txtToDate);
            dateText = "ToDateDflt";
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnToDateActionPerformed

    private void btnFrmDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFrmDateActionPerformed
        // TODO add your handling code here:
        try {
            DatePicker dp = new DatePicker(this, new Date());
            dp.start(txtFromDate);
            dateText = "FromDateDflt";

        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnFrmDateActionPerformed

    private void drawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drawActionPerformed
        // TODO add your handling code here:
        try {
            String sid = txtStudentIdPiChart.getText();
            if (sid.trim().equals("")) {
                error("Please Enter SID Of Student !!!");
                return;
            }

            if (!chkSID(sid)) {
                error("Student Id Does Not Exists !!!");
                return;
            }

            String subject = cmbSubjectChart.getSelectedItem().toString();

            String frmDate = txtPiStartDate.getText();
            String toDate = txtPiEndDate.getText();

            if (frmDate.trim().equals("")) {
                error("Please Select Proper Start Date !!!");
                txtPiStartDate.grabFocus();
                return;
            }

            if (toDate.trim().equals("")) {
                error("Please Select Proper End Date");
                txtPiEndDate.grabFocus();
                return;
            }

            int TotalNumOfDays = getNumOfPresentDays(subject, frmDate, toDate);
            if (TotalNumOfDays == 0) {
                error("No Data Found  FOR This subject On this dates!!!");
                return;
            }

            System.out.println("" + TotalNumOfDays);

            String q = "SELECT COUNT(*) FROM ATTENDENCE WHERE SUBJECT='" + subject + "' AND (attDate<='" + toDate + "' AND attDate>='" + frmDate + "') AND present='p' and SID='" + sid + "'";
            System.out.println("" + q);

            ResultSet rs1 = dbcon.getResultSet(q);
            int stcnt = 0;
            if (rs1.next()) {
                stcnt = Integer.parseInt(rs1.getString(1));
            }

            System.out.println("stcnt: " + stcnt);
            System.out.println("Total Days: " + TotalNumOfDays);
            double percent = ((double) (stcnt) / TotalNumOfDays) * 100;

            int diff = dateDiff(toDate, frmDate);
            System.out.println("" + diff);
            if (diff < 0) {
                error("Enddate is less than StartDate");
                return;
            }

            int totalNoOfDays = TotalNumOfDays;//getNumOfRecords(sid, frmDate, toDate);
            System.out.println("Total No Of Days: " + totalNoOfDays);

            int totalPresnetDays = stcnt;
            System.out.println(" Total No Of Present Days : " + totalPresnetDays);

//            int totalnumofabsentdays=totalNoOfDays-totalPresnetDays;
            DecimalFormat df = new DecimalFormat("##.##");

            double presentPercent = ((float) totalPresnetDays / totalNoOfDays) * 100;
            String present_prcent = (df.format(presentPercent));
            presentPercent = Double.parseDouble(present_prcent);
            System.out.println(" Present Percent: " + presentPercent);

            double absentPercent = (100.00f - presentPercent);
            System.out.println(" Absent Percent: " + absentPercent);

            /**
             * Draw a digram Now
             *
             */
            DefaultPieDataset dataSet = new DefaultPieDataset();

            dataSet.setValue("Absent", absentPercent);
            dataSet.setValue("Present", presentPercent);

            JFreeChart chart = ChartFactory.createPieChart(
                    "ATTENDENCE CHART FOR STUDENT " + (getStudentName(sid).toUpperCase()), dataSet, true, true, false);

            //       chart.addSubtitle();
            ChartPanel myChart = new ChartPanel(chart);
            myChart.setMouseWheelEnabled(true);
            pnlDraw.add(myChart);
            pnlDraw.validate();

            lblPercent.setText(presentPercent + "%");

        } catch (SQLException | NumberFormatException e) {
        }
    }//GEN-LAST:event_drawActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        DatePicker dp = new DatePicker(this, new Date());
        dp.start(txtPiEndDate);
        dateText = "PiEndDate";
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        DatePicker dp = new DatePicker(this, new Date());
        dp.start(txtPiStartDate);
        dateText = "PiStartDate";
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        getByStudentID();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        getByDate();
    }//GEN-LAST:event_btnSearchActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        DatePicker dp = new DatePicker(this, new Date());
        dp.start(txtDate);
        dateText = "first";
    }//GEN-LAST:event_jButton1ActionPerformed

    private void addtimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addtimeActionPerformed
        // TODO add your handling code here:
        String fromtime = txtFromTime.getText();
        String totime = txtToTime.getText();

        if (fromtime.trim().equals("")) {
            error("ENTER PROPER TIME !!");
            txtFromTime.grabFocus();
            return;
        }

        if (totime.trim().equals("")) {
            error("ENTER PROPER TIME !!");
            txtToTime.grabFocus();
            return;
        }

        String day = cmbDay.getSelectedItem().toString();
        String subject = cmbSub.getSelectedItem().toString();

        try {
            if (!chkExists(day, subject, fromtime, totime)) {
                String query = "INSERT INTO timetable VALUES('" + day + "','" + subject + "','" + fromtime + "','" + totime + "')";
                int ans = dbcon.getUpdate(query);
                if (ans == 1) {
                    txtFromTime.setText("");
                    txtToTime.setText("");
                    JOptionPane.showMessageDialog(this, "SuucessFully Updated Entry !!");
                } else {
                    error("Failed To Update Entry !!");
                }
            } else {
                error("Entry Already Exists");
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_addtimeActionPerformed
    public boolean chkExists(String day, String subject, String fromtime, String totime) {
        boolean flag = false;
        try {
            String Query = "SELECT * FROM timetable WHERE Day='" + day + "' AND Subject='" + subject + "' AND Fromtime='" + fromtime + "' AND Totime='" + totime + "'";
            ResultSet rs = dbcon.getResultSet(Query);
            if (rs.next()) {
                flag = true;
            }
        } catch (Exception e) {
        }
        return flag;
    }

    @SuppressWarnings("static-access")
    private void showtimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showtimeActionPerformed
        // TODO add your handling code here:
        try {
            String query = "SELECT * FROM timetable";
            ResultSet rs = dbcon.getResultSet(query);
            tblResults.setModel(new DbUtils().resultSetToTableModel(rs));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_showtimeActionPerformed

    private void txtFromTimeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFromTimeKeyReleased
        // TODO add your handling code here:
        String text = txtFromTime.getText();
        text = text.replaceAll("[^\\d\\.]+", "");
        txtFromTime.setText(text);
    }//GEN-LAST:event_txtFromTimeKeyReleased

    private void txtToTimeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtToTimeKeyReleased
        // TODO add your handling code here
        String text = txtToTime.getText();
        text = text.replaceAll("[^\\d\\.]+", "");
        txtToTime.setText(text);
    }//GEN-LAST:event_txtToTimeKeyReleased

    private void txtToTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtToTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtToTimeActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        if (tblResults.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "First Select row then Delete", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String query = "DELETE FROM TIMETABLE WHERE day='" + data1 + "' AND subject='" + data2 + "' AND fromtime='" + data3 + "' AND totime='" + data4 + "'";
        dbcon.getUpdate(query);
        try {
            String query1 = "SELECT * FROM timetable";
            ResultSet rs = dbcon.getResultSet(query1);
            tblResults.setModel(new DbUtils().resultSetToTableModel(rs));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void tblResultsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblResultsMouseClicked
        // TODO add your handling code here:
        try {
            int rowcount = tblResults.getSelectedRowCount();
            if (rowcount == 1) {
                int row = tblResults.getSelectedRow();
                data1 = ((DefaultTableModel) tblResults.getModel()).getValueAt(row, 0).toString();
                data2 = ((DefaultTableModel) tblResults.getModel()).getValueAt(row, 1).toString();
                data3 = ((DefaultTableModel) tblResults.getModel()).getValueAt(row, 2).toString();
                data4 = ((DefaultTableModel) tblResults.getModel()).getValueAt(row, 3).toString();
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_tblResultsMouseClicked

    private void cmbSubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSubActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbSubActionPerformed
    public void addTable(Vector row) {
        Vector head = new Vector();
        head.add("id");
        head.add("name");
        head.add("Percent");

        tblDefltList.setModel((TableModel) new DefaultTableModel(row, head));
    }

    public List<Date> getListTimeTable(String stdate, String enddate) {
        List<Date> dates = new ArrayList<Date>();
        try {
            String str_date = stdate;
            String end_date = enddate;
            System.out.println("" + stdate);
            System.out.println("" + enddate);
            DateFormat formatter;

            formatter = new SimpleDateFormat("yyyy-MM-dd");
            Date startDate = (Date) formatter.parse(str_date);
            Date endDate = (Date) formatter.parse(end_date);
            long interval = 24 * 1000 * 60 * 60; // 1 hour in millis
            long endTime = endDate.getTime(); // create your endtime here, possibly using Calendar or Date
            long curTime = startDate.getTime();
            while (curTime <= endTime) {
                dates.add(new Date(curTime));
                curTime += interval;
            }
            for (int i = 0; i < dates.size(); i++) {
                Date lDate = (Date) dates.get(i);
                String ds = formatter.format(lDate);
                System.out.println(" Date is ..." + ds);
            }
        } catch (ParseException ex) {
        }
        return dates;
    }

    public void error(String msg) {
        JOptionPane.showMessageDialog(this, msg, "ERROR", JOptionPane.ERROR_MESSAGE);
    }

    /**
     * Get Student Name From Sid
     *
     */
    public String getStudentName(String sid) {
        String name = "";
        try {
            String query = "SELECT Student_name From student Where sid='" + sid + "'";
            ResultSet rs = dbcon.getResultSet(query);

            if (rs.next()) {
                name = rs.getString(1);
            }
        } catch (Exception e) {
        }
        return name;
    }

    /**
     * Get Total Number Of present Days:
     *
     */
    public int getNumOfPresentDays(String subject, String frmDate, String toDate) {
        int totalNumOfPresentDays = 0;
        try {
            System.out.println("FRMDATE: " + frmDate);
            System.out.println("TODATE: " + toDate);
            List<Date> totalDays = getListTimeTable(frmDate, toDate);
            System.out.println("TOTAL size: " + totalDays.size());
            SimpleDateFormat sdf = new SimpleDateFormat("EEEEEEEEEE");
            for (Date d : totalDays) {
                String day = sdf.format(d);
                System.out.println("day: " + day);
                String query = "SELECT * FROM timetable WHERE day='" + day + "' AND Subject='" + subject + "'";
                System.out.println("" + query);
                ResultSet rs = dbcon.getResultSet(query);
                if (rs.next()) {
                    totalNumOfPresentDays++;
                }
            }
        } catch (Exception e) {
        }
        return totalNumOfPresentDays;
    }

    /**
     *
     * Get Counter
     */
    public int getNumOfRecords(String sid, String frmDate, String toDate) {
        int number = -1;
        try {
            String query = "  SELECT COUNT(*) FROM attendence "
                    + "  WHERE sid='" + sid + "' "
                    + " AND attDate>='" + frmDate + "' "
                    + " AND attDate<='" + toDate + "'";

            System.out.println("" + query);
            ResultSet rs = dbcon.getResultSet(query);
            if (rs.next()) {
                number = Integer.parseInt(rs.getString(1));
            }
        } catch (SQLException | NumberFormatException e) {
        }
        return number;
    }

    /**
     * Check SID exists
     *
     */
    public boolean chkSID(String sid) {
        boolean flag = false;
        try {
            String query = "SELECT * FROM student WHERE SID='" + sid + "'";
            ResultSet rs = dbcon.getResultSet(query);
            if (rs.next()) {
                flag = true;
            }
        } catch (Exception e) {
        }
        return flag;
    }

    /**
     * Get DateDifference
     *
     */
    public int dateDiff(String strtDate, String endDate) {
        int diff = -1;
        try {
            String query = "SELECT DATEDIFF(Date('" + strtDate + "'),Date('" + endDate + "')) FROM student";
            System.out.println("" + query);
            ResultSet rs = dbcon.getResultSet(query);
            if (rs.next()) {
                diff = Integer.parseInt(rs.getString(1));
            }
        } catch (SQLException | NumberFormatException e) {
        }
        return diff;
    }

    /**
     * Getting By Date
     *
     */
    @SuppressWarnings("static-access")
    public void getByDate() {
        try {
            String date = txtDate.getText();
            if (date.equals("")) {
                JOptionPane.showMessageDialog(this, "Date Should Not Be Null!!");
                return;
            }

            String query = "SELECT s.Student_name,s.Student_std,att.present as 'Attenedence',att.attDate,att.entryTime"
                    + " FROM Attendence att,Student s "
                    + " WHERE att.sid=s.sid "
                    + " And att.attDate='" + date + "'";
            System.out.println("" + query);
            ResultSet rs = dbcon.getResultSet(query);
            tblStudentDetails.setModel(new DbUtils().resultSetToTableModel(rs));

        } catch (Exception e) {
        }

    }

    /**
     * Getting By Students ID
     *
     */
    @SuppressWarnings("static-access")
    public void getByStudentID() {
        try {
            String sid = txtStudentId.getText();
            if (sid.equals("")) {
                JOptionPane.showMessageDialog(this, "Please Enter Student Id !!!");
                return;
            }

            String query = "SELECT s.Student_name,s.Student_std,att.present as 'Attenedence',att.attDate,att.entryTime"
                    + " FROM Attendence att,Student s "
                    + " WHERE att.sid=s.sid "
                    + " And s.sid='" + sid + "'";

            ResultSet rs = dbcon.getResultSet(query);
            tblStudentDetails.setModel(new DbUtils().resultSetToTableModel(rs));
        } catch (Exception e) {
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AttendenceCheck.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AttendenceCheck.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AttendenceCheck.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AttendenceCheck.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AttendenceCheck().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addtime;
    private javax.swing.JButton btnFrmDate;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnToDate;
    private javax.swing.JComboBox cmbDay;
    private javax.swing.JComboBox cmbSub;
    private javax.swing.JComboBox cmbSubject;
    private javax.swing.JComboBox cmbSubjectChart;
    private javax.swing.JButton dfautlst;
    private javax.swing.JButton draw;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JLabel lblPercent;
    private javax.swing.JPanel pnlDraw;
    private javax.swing.JButton showtime;
    private javax.swing.JTable tblDefltList;
    private javax.swing.JTable tblResults;
    private javax.swing.JTable tblStudentDetails;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtFromDate;
    private javax.swing.JTextField txtFromTime;
    private javax.swing.JTextField txtPiEndDate;
    private javax.swing.JTextField txtPiStartDate;
    private javax.swing.JTextField txtStudentId;
    private javax.swing.JTextField txtStudentIdPiChart;
    private javax.swing.JTextField txtToDate;
    private javax.swing.JTextField txtToTime;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(Observable o, Object arg) {
        Calendar calendar = (Calendar) arg;
        DatePicker dp = (DatePicker) o;
        if (dateText.equals("first")) {
            txtDate.setText(dp.formatDate(calendar, "yyyy-MM-dd"));
        }

        if (dateText.equals("PiStartDate")) {
            txtPiStartDate.setText(dp.formatDate(calendar, "yyyy-MM-dd"));

        }
        if (dateText.equals("PiEndDate")) {
            txtPiEndDate.setText(dp.formatDate(calendar, "yyyy-MM-dd"));
        }

        if (dateText.equals("FromDateDflt")) {
            txtFromDate.setText(dp.formatDate(calendar, "yyyy-MM-dd"));
        }

        if (dateText.equals("ToDateDflt")) {
            txtToDate.setText(dp.formatDate(calendar, "yyyy-MM-dd"));
        }
    }
}
